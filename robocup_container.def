##
## RoboCup / LASR-Base Container
## Based on TIAGo PAL Melodic container
##


Bootstrap: localimage
From: ./tiago_pal_melodic.sif

%post -c /bin/bash
echo $ROS_PACKAGE_PATH $ROS_DISTRO
unset ROS_PACKAGE_PATH ROS_ETC_DIR ROS_ROOT ROS_DISTRO


##
## Install packages and prepare container
##

# Ensure container is up to date
apt update
apt upgrade -y

# Additional apt packages
apt install ros-melodic-audio-common python3-numpy python3-opencv libasound-dev libportaudio2 libportaudiocpp0 portaudio19-dev ffmpeg -y

# Install Node.js v16.x
curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
sudo apt-get install -y nodejs

# Prepare folder for installing additional dependencies from source
mkdir /deps


###
### Install alternative Python versions from source
###

# Dependencies for Python builds (we want all optional modules)
apt install -y build-essential gdb lcov pkg-config libbz2-dev libffi-dev libgdbm-dev \
  libgdbm-compat-dev liblzma-dev libncurses5-dev libreadline6-dev libsqlite3-dev \
  libssl-dev lzma lzma-dev tk-dev uuid-dev zlib1g-dev


##
## Install Python 3.9 from source
##

# Download sources and extract
PYTHON_VERSION=3.9.18
cd /deps
wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz
tar zxvf Python-$PYTHON_VERSION.tgz
cd Python-$PYTHON_VERSION

# Build and install
./configure --with-pydebug --with-ensurepip=install
make -s -j$(nproc)
make install

# Install additional global packages
python3.9 -m pip install pyyaml==6.0.1 rospkg==1.5.0 \
  pip==23.2.1 setuptools==68.0.0 wheel==0.41.1


##
## Install Python 3.10 from source
##

# Download sources and extract
PYTHON_VERSION=3.10.9
cd /deps
wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz
tar zxvf Python-$PYTHON_VERSION.tgz
cd Python-$PYTHON_VERSION

# Build and install
./configure --with-pydebug --with-ensurepip=install
make -s -j$(nproc)
make install

# Install additional global packages
python3.10 -m pip install pyyaml==6.0.1 rospkg==1.5.0 \
  pip==23.2.1 setuptools==68.0.0 wheel==0.41.1


##
## Configure global Python installation
##

# Reconfigure Python symlinks
unlink /usr/bin/python
ln -s /usr/bin/python2.7 /usr/bin/python
unlink /usr/local/bin/python3

# Force catkin to use Python 3.10
mkdir -p /path/python3.10
ln -s /usr/local/bin/python3.10 /path/python3.10/python3
alias catkin='PATH="/path/python3.10:$PATH" /usr/bin/catkin '

# Additional Python packages
python3.6 -m pip install rosnumpy==0.0.5.2 scipy==1.5.4 black==22.8.0 scikit-build==0.16.7 scikit-learn==0.24.2 nvidia-ml-py3==7.352.0 sounddevice==0.4.4 soundfile==0.12.1 pyaudio==0.2.13
python3.6 -m pip install torch==1.9.1+cpu torchvision==0.10.1+cpu torchaudio==0.9.1 -f https://download.pytorch.org/whl/torch_stable.html


##
## Configure overlay workspace with additional packages
##

# Create workspace
source /opt/ros/melodic/setup.bash
# PAL container
if [ -f "/opt/pal/ferrum/setup.bash" ]; then
    source /opt/pal/ferrum/setup.bash
# Opensource container
else
    source /opt/tiago_public_ws/devel/setup.bash
fi

mkdir -p /overlay_ws/src

# Clone catkin_virtualenv
git clone https://github.com/locusrobotics/catkin_virtualenv /overlay_ws/src/catkin_virtualenv
cd /overlay_ws/src/catkin_virtualenv
git reset --hard 4af99703e6c7faf12c5d328dbab346250fd085f7
git clean -df
git fetch --depth=1

# Clone video_stream_opencv
git clone https://github.com/ros-drivers/video_stream_opencv /overlay_ws/src/video_stream_opencv
cd /overlay_ws/src/video_stream_opencv
git reset --hard 65949bdc5c9468d18c51aed9073d020bec892532
git clean -df
git fetch --depth=1

# Build workspace (ensure Python 3.10 is used)
cd /overlay_ws
PATH="/path/python3.10:$PATH" catkin build

# Ensure workspace is loaded on container start
#
# This updates /opt/env.sh which is executed on container start,
# this will source the overlay workspace straight after the PAL workspace
# PAL container
if [ -f "/opt/pal/ferrum/setup.bash" ]; then
    sed -i '/source \/opt\/pal\/ferrum\/setup.bash/a source \/overlay_ws\/devel\/setup.bash' /opt/env.sh
# Opensource container
else
    sed -i '/source \/opt\/tiago_public_ws\/devel\/setup.bash/a source \/overlay_ws\/devel\/setup.bash' /opt/env.sh
fi


##
## Clean up
##

# Remove build folder
rm -r /deps

# Unset variables
unset PYTHON_VERSION ROS_PACKAGE_PATH ROS_ETC_DIR ROS_ROOT ROS_DISTRO
