##
## RoboCup / LASR-Base Container
## Based on TIAGo PAL Melodic container
##
## Build container:
## - Copy tiago_pal_melodic.sif into current directory or update From path
## - Run build command:
##   sudo apptainer build robocup_container.sif robocup_container.def
##


Bootstrap: localimage
From: ./tiago_pal_melodic.sif

%post -c /bin/bash
echo $ROS_PACKAGE_PATH $ROS_DISTRO
unset ROS_PACKAGE_PATH ROS_ETC_DIR ROS_ROOT ROS_DISTRO


##
## Install packages and prepare container
##

# Ensure container is up to date
apt update
apt upgrade -y

# Additional apt packages
#
# ros-melodic-audio-common: used for capturing audio
# python3-numpy: provides numpy for python3
# python3-opencv: provides cv2 for python3
# libasound-dev libportaudio2 libportaudiocpp0 portaudio19-dev: libraries for audio I/O
# ffmpeg: record, convert, and stream audio and video
apt install ros-melodic-audio-common python3-numpy python3-opencv libasound-dev libportaudio2 libportaudiocpp0 portaudio19-dev ffmpeg -y

# Install Node.js v16.x
curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
sudo apt-get install -y nodejs

# Additional Python packages
#
# rosnumpy: conversion helper between ROS and numpy
# scipy: mathematics library
python3.6 -m pip install rosnumpy==0.0.5.2 scipy==1.5.4

# Prepare folder for installing additional dependencies from source
mkdir /deps


##
## Install Python 3.10 from source
## 
## We install from source as it's not available in PAL repositories and Python
## is no longer available from the deadsnakes PPA as Ubuntu 18 has lost support.
## When migrating this build step to noetic, you may be albe to just use the
## deadsnakes repository like:
##
## apt install software-properties-common -y && apt-add-repository ppa:deadsnakes/ppa \
##  && apt update && apt install python3.8 python3.8-dev python3-setuptools [.. etc]
##
## This is used for various virtual environments in the LASR repository.
##
## WARNING: Python 3.11+ appears to be incompatible with rospy from melodic!
## WARNING: Python releases from PAL repositories are quite old.
##

# Dependencies for Python build (we want all optional modules)
apt install -y build-essential gdb lcov pkg-config libbz2-dev libffi-dev libgdbm-dev \
  libgdbm-compat-dev liblzma-dev libncurses5-dev libreadline6-dev libsqlite3-dev \
  libssl-dev lzma lzma-dev tk-dev uuid-dev zlib1g-dev

# Download sources and extract
PYTHON_VERSION=3.10.9
cd /deps
wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz
tar zxvf Python-$PYTHON_VERSION.tgz
cd Python-$PYTHON_VERSION

# Build and install
./configure --with-pydebug --with-ensurepip=install
make -s -j$(nproc)
make install

# Install additional global packages
#
# pyyaml: provides yaml package required for catkin_virtualenv and rospy
# rospkg: provides utilities required by rospy
# pip: Python package manager
# setuptools: Python build tools
# wheel: Python build tools
python3.10 -m pip install pyyaml==6.0.1 rospkg==1.5.0 \
  pip==23.2.1 setuptools==68.0.0 wheel==0.41.1


##
## Configure global Python installation
##

# Reconfigure the /usr/bin/python symlink
unlink /usr/bin/python
ln -s /usr/bin/python2.7 /usr/bin/python
unlink /usr/local/bin/python3

# Force catkin to use Python 3.10
#
# We build a new PATH variable which overrides python3
# when invoking catkin so that catkin_virtualenv works
mkdir -p /path/python3.10
ln -s /usr/local/bin/python3.10 /path/python3.10/python3
alias catkin='PATH="/path/python3.10:$PATH" /usr/bin/catkin '
# We only want to override catkin build so this should be sufficient


##
## Configure overlay workspace with additional packages
##

# Create workspace
source /opt/ros/melodic/setup.bash
# PAL container
if [ -f "/opt/pal/ferrum/setup.bash" ]; then
    source /opt/pal/ferrum/setup.bash
# Opensource container
else
    source /opt/tiago_public_ws/devel/setup.bash
fi

mkdir -p /overlay_ws/src

# Clone catkin_virtualenv
git clone --depth 1 https://github.com/locusrobotics/catkin_virtualenv /overlay_ws/src/catkin_virtualenv
cd /overlay_ws/src/catkin_virtualenv
git reset --hard 4af99703e6c7faf12c5d328dbab346250fd085f7
git clean -df

# Build workspace (ensure Python 3.10 is used)
cd /overlay_ws
PATH="/path/python3.10:$PATH" catkin build

# Ensure workspace is loaded on container start
#
# This updates /opt/env.sh which is executed on container start,
# this will source the overlay workspace straight after the PAL workspace
# PAL container
if [ -f "/opt/pal/ferrum/setup.bash" ]; then
    sed -i '/source \/opt\/pal\/ferrum\/setup.bash/a source \/overlay_ws\/devel\/setup.bash' /opt/env.sh
# Opensource container
else
    sed -i '/source \/opt\/tiago_public_ws\/devel\/setup.bash/a source \/overlay_ws\/devel\/setup.bash' /opt/env.sh
fi


##
## Clean up
##

# Remove build folder
rm -r /deps

# Unset variables
unset PYTHON_VERSION ROS_PACKAGE_PATH ROS_ETC_DIR ROS_ROOT ROS_DISTRO
